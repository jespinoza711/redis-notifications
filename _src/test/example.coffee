_ = require( "lodash" )

RedisNotifications = require( "../." )
utils = require( "../lib/utils" )


nf = new RedisNotifications()

nf.init()
# Hooks

nf.on "error", ( err )->
	console.log "\n\n --- EXAMPLE - READ USER --- \n", err, "\n --- \n\n"
	console.trace()
	return


pickSendIv = utils.randPick( [ "i", "d1700", "d1600", "d0900", "p", "0" ] )
nf.on "readUser", ( id, cb )->
	# read the users settings
	console.log "\n\n --- EXAMPLE - READ USER --- \nUSER_ID", id, "\n --- \n\n"
	_user = 
		id: id
		firstname: "John"
		lastname: "Do"
		email: "john.do@example.com"
		timezone: "CET" # possible timezones can be viewed at http://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/
		sendInterval: pickSendIv()

	### `sendInterval` {i|d|p|0}{time}
	eg: d:1700

	i = immediately;
	d = daily
	p = only prio
	0 = off

	time = 1700 - at 17:00 o clock. Required for `d` and optional for `p`
	###

	cb( null, _user )
	return

nf.on "getContent", ( user, type, additional, cb )=>
	console.log "\n\n --- EXAMPLE - GET CONTENT --- \nUSER:", user, "\n --- \nTYPE:", type, "\n --- \nADDITIONAL:", additional, "\n --- \n\n"

	_content = 
		subject: "This is my subject"
		body: "This is the whole <b>content abc</b> of this message."
		icon: additional.icon
		sid: additional.sid
		#teaser: "This is a short abstract of the content" # If not defined it will be generated by reducing the `body` to 100 words

	cb( null, _content )
	return

nf.on "createNotification", ( user, creator, message, additional, cb )=>
	console.log "\n\n --- EXAMPLE - SEND NOTIFICATION --- \nID",  message.id, "\n --- \nUSER:", user, "\n --- \nMSG:", message, "\n --- \nCREATOR:", creator, "\n --- \nADDITIONAL:", additional, "\n --- \n\n"
	cb( null )
	return

nf.on "sendMail", ( user, messages, additional, cb )=>
	console.log "\n\n --- EXAMPLE - SEND MAIL --- \nIDs", _.pluck( messages, "id" ), "\n --- \nUSER:", user, "\n --- \nMSG:", messages, "\n --- \nADDITIONAL:", additional, "\n --- \n\n"
	cb( null )
	return

pickPrio = utils.randPick( [ true, false ] )
# define a creator and write some messages
_creator = 
	id: "ABCDE"
	firstname: "William"
	lastname: "Creator"
	email: "william.create@example.com"

_optionsMulti = 
	type: "foo"
	users: [ "ABCD1", "ABCD2", "ABCD3", "ABCD4", "ABCD5" ]
	high: pickPrio()
	additional:
		sid: 1
		icon: "warning"

_err = nf.createMulti( _creator, _optionsMulti )
console.log( "\n\n --- EXAMPLE - ERROR --- \n", _err, "\n --- \n\n" ) if _err?

_optionsSingle = 
	type: "bar"
	user: "WXYZ1"
	high: pickPrio()
	additional:
		sid: 1
		icon: "user"

nf.create _creator, _optionsSingle, ( err, data )=>
	console.log "\n\n --- EXAMPLE - create --- \n", err, data, "\n --- \n\n"
	return


# Init and start the module
nf.init()